# Only non OpenGL components of Yocto/GL are built
# This Travis file is a heavily modified version of https://github.com/nlohmann/json

language: cpp

dist: trusty
sudo: required
group: edge

matrix:
  include:

  - os: osx
    osx_image: xcode8.3

  - os: osx
    osx_image: xcode9.2

  - os: linux
    compiler: gcc
    env: COMPILER=g++-6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'sourceline': 'deb http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main']
        packages: ['g++-6', 'ninja-build', 'libgl1-mesa-dev', 'libglew-dev', 'libglfw3-dev']

  - os: linux
    compiler: gcc
    env: COMPILER=g++-7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'sourceline': 'deb http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main']
        packages: ['g++-7', 'ninja-build', 'libgl1-mesa-dev', 'libglew-dev', 'libglfw3-dev']

  - os: linux
    compiler: clang
    env: COMPILER=clang++-4.0
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0', 'sourceline': 'deb http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main']
        packages: ['g++-6', 'clang-4.0', 'ninja-build', 'libgl1-mesa-dev', 'libglew-dev', 'libglfw3-dev']

  - os: linux
    compiler: clang
    env: COMPILER=clang++-5.0
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0', 'sourceline': 'deb http://ppa.launchpad.net/keithw/glfw3/ubuntu trusty main']
        packages: ['g++-6', 'clang-5.0', 'ninja-build', 'libgl1-mesa-dev', 'libglew-dev', 'libglfw3-dev']

branches:
  only:
    - master
    - development

script:
  # get CMake and Ninja (only for systems with brew - macOS)
  - |
     if [[ (-x $(which brew)) ]]; then
       brew update
       brew install cmake ninja glfw
       cmake --version
     fi

  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # show OS/compiler version
  - uname -a
  - $CXX --version

  # compile and execute unit tests
  - mkdir -p build && cd build
  - cmake .. ${CMAKE_OPTIONS} -GNinja && cmake --build . --config Release
  - cd ..
